### YamlMime:UniversalReference
items:
  - uid: azure-storage.global
    id: azure-storage.global
    name: GLOBAL
    fullName: GLOBAL
    type: Class
    langs:
      - js
    children:
      - azure-storage._global.generateDevelopmentStorageCredentials
      - azure-storage._global.createTableService
      - azure-storage._global.createTableServiceWithSas
      - azure-storage._global.createBlobService
      - azure-storage._global.createBlobServiceWithSas
      - azure-storage._global.createBlobServiceAnonymous
      - azure-storage._global.createFileService
      - azure-storage._global.createFileServiceWithSas
      - azure-storage._global.createQueueService
      - azure-storage._global.createQueueServiceWithSas
      - azure-storage._global.generateAccountSharedAccessSignature
  - uid: azure-storage._global.generateDevelopmentStorageCredentials
    id: azure-storage._global.generateDevelopmentStorageCredentials
    name: generateDevelopmentStorageCredentials(proxyUri)
    summary: >-
      Creates a connection string that can be used to create a service which
      runs on the storage emulator. The emulator must be downloaded separately.
    fullName: azure-storage.generateDevelopmentStorageCredentials(proxyUri)
    type: Function
    syntax:
      parameters:
        - id: proxyUri
          type:
            - string
          description: 'The proxyUri. By default, http://127.0.0.1'
          optional: true
      return:
        type:
          - string
        description: A connection string representing the development storage credentials.
      content: function generateDevelopmentStorageCredentials(proxyUri)
    langs:
      - js
  - uid: azure-storage._global.createTableService
    id: azure-storage._global.createTableService
    name: >-
      createTableService(storageAccountOrConnectionString, storageAccessKey,
      host)
    summary: >-
      Creates a new <xref:azure-storage.TableService> object.

      If no storageaccount or storageaccesskey are provided, the
      AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and
      AZURE_STORAGE_ACCESS_KEY 

      environment variables will be used.
    fullName: >-
      azure-storage.createTableService(storageAccountOrConnectionString,
      storageAccessKey, host)
    type: Function
    syntax:
      parameters:
        - id: storageAccountOrConnectionString
          type:
            - string
          description: The storage account or the connection string.
          optional: true
        - id: storageAccessKey
          type:
            - string
          description: The storage access key.
          optional: true
        - id: host
          type:
            - string
            - object
          description: |-
            The host address. To define primary only, pass a string. 
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
          optional: true
      return:
        type:
          - azure-storage.TableService
        description: A new TableService object.
      content: >-
        function createTableService(storageAccountOrConnectionString,
        storageAccessKey, host)
    langs:
      - js
  - uid: azure-storage._global.createTableServiceWithSas
    id: azure-storage._global.createTableServiceWithSas
    name: 'createTableServiceWithSas(host, sasToken)'
    summary: >-
      Creates a new <xref:azure-storage.TableService> object using the host Uri
      and the SAS credentials provided.
    fullName: 'azure-storage.createTableServiceWithSas(host, sasToken)'
    type: Function
    syntax:
      parameters:
        - id: host
          type:
            - string
            - object
          description: |-
            The host address. To define primary only, pass a string. 
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: sasToken
          type:
            - string
          description: The Shared Access Signature token.
      return:
        type:
          - azure-storage.TableService
        description: A new TableService object with the SAS credentials.
      content: 'function createTableServiceWithSas(host, sasToken)'
    langs:
      - js
  - uid: azure-storage._global.createBlobService
    id: azure-storage._global.createBlobService
    name: >-
      createBlobService(storageAccountOrConnectionString, storageAccessKey,
      host)
    summary: >-
      Creates a new <xref:azure-storage.BlobService> object.

      If no storageaccount or storageaccesskey are provided, the
      AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and
      AZURE_STORAGE_ACCESS_KEY 

      environment variables will be used.
    fullName: >-
      azure-storage.createBlobService(storageAccountOrConnectionString,
      storageAccessKey, host)
    type: Function
    syntax:
      parameters:
        - id: storageAccountOrConnectionString
          type:
            - string
          description: The storage account or the connection string.
        - id: storageAccessKey
          type:
            - string
          description: The storage access key.
          optional: true
        - id: host
          type:
            - string
            - object
          description: |-
            The host address. To define primary only, pass a string. 
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
          optional: true
      return:
        type:
          - azure-storage.BlobService
        description: A new BlobService object.
      content: >-
        function createBlobService(storageAccountOrConnectionString,
        storageAccessKey, host)
    langs:
      - js
  - uid: azure-storage._global.createBlobServiceWithSas
    id: azure-storage._global.createBlobServiceWithSas
    name: 'createBlobServiceWithSas(host, sasToken)'
    summary: >-
      Creates a new <xref:azure-storage.BlobService> object using the host Uri
      and the SAS credentials provided.
    fullName: 'azure-storage.createBlobServiceWithSas(host, sasToken)'
    type: Function
    syntax:
      parameters:
        - id: host
          type:
            - string
            - object
          description: |-
            The host address. To define primary only, pass a string. 
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: sasToken
          type:
            - string
          description: The Shared Access Signature token.
      return:
        type:
          - azure-storage.BlobService
        description: A new BlobService object with the SAS credentials.
      content: 'function createBlobServiceWithSas(host, sasToken)'
    langs:
      - js
  - uid: azure-storage._global.createBlobServiceAnonymous
    id: azure-storage._global.createBlobServiceAnonymous
    name: createBlobServiceAnonymous(host)
    summary: >-
      Creates a new <xref:azure-storage.BlobService> object using the host uri
      and anonymous access.
    fullName: azure-storage.createBlobServiceAnonymous(host)
    type: Function
    syntax:
      parameters:
        - id: host
          type:
            - string
            - object
          description: |-
            The host address. To define primary only, pass a string. 
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
      return:
        type:
          - azure-storage.BlobService
        description: A new BlobService object with the anonymous credentials.
      content: function createBlobServiceAnonymous(host)
    langs:
      - js
  - uid: azure-storage._global.createFileService
    id: azure-storage._global.createFileService
    name: >-
      createFileService(storageAccountOrConnectionString, storageAccessKey,
      host)
    summary: >-
      Creates a new <xref:azure-storage.FileService> object.

      If no storageaccount or storageaccesskey are provided, the
      AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and
      AZURE_STORAGE_ACCESS_KEY 

      environment variables will be used.
    fullName: >-
      azure-storage.createFileService(storageAccountOrConnectionString,
      storageAccessKey, host)
    type: Function
    syntax:
      parameters:
        - id: storageAccountOrConnectionString
          type:
            - string
          description: The storage account or the connection string.
        - id: storageAccessKey
          type:
            - string
          description: The storage access key.
          optional: true
        - id: host
          type:
            - string
            - object
          description: |-
            The host address. To define primary only, pass a string. 
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
          optional: true
      return:
        type:
          - azure-storage.FileService
        description: A new FileService object.
      content: >-
        function createFileService(storageAccountOrConnectionString,
        storageAccessKey, host)
    langs:
      - js
  - uid: azure-storage._global.createFileServiceWithSas
    id: azure-storage._global.createFileServiceWithSas
    name: 'createFileServiceWithSas(host, sasToken)'
    summary: >-
      Creates a new <xref:azure-storage.FileService> object using the host Uri
      and the SAS credentials provided.
    fullName: 'azure-storage.createFileServiceWithSas(host, sasToken)'
    type: Function
    syntax:
      parameters:
        - id: host
          type:
            - string
            - object
          description: |-
            The host address. To define primary only, pass a string. 
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: sasToken
          type:
            - string
          description: The Shared Access Signature token.
      return:
        type:
          - azure-storage.FileService
        description: A new FileService object with the SAS credentials.
      content: 'function createFileServiceWithSas(host, sasToken)'
    langs:
      - js
  - uid: azure-storage._global.createQueueService
    id: azure-storage._global.createQueueService
    name: >-
      createQueueService(storageAccountOrConnectionString, storageAccessKey,
      host)
    summary: >-
      Creates a new <xref:azure-storage.QueueService> object.

      If no storageaccount or storageaccesskey are provided, the
      AZURE_STORAGE_CONNECTION_STRING and then the AZURE_STORAGE_ACCOUNT and
      AZURE_STORAGE_ACCESS_KEY 

      environment variables will be used.
    fullName: >-
      azure-storage.createQueueService(storageAccountOrConnectionString,
      storageAccessKey, host)
    type: Function
    syntax:
      parameters:
        - id: storageAccountOrConnectionString
          type:
            - string
          description: The storage account or the connection string.
          optional: true
        - id: storageAccessKey
          type:
            - string
          description: The storage access key.
          optional: true
        - id: host
          type:
            - string
            - object
          description: |-
            The host address. To define primary only, pass a string. 
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
          optional: true
      return:
        type:
          - azure-storage.QueueService
        description: A new QueueService object.
      content: >-
        function createQueueService(storageAccountOrConnectionString,
        storageAccessKey, host)
    langs:
      - js
  - uid: azure-storage._global.createQueueServiceWithSas
    id: azure-storage._global.createQueueServiceWithSas
    name: 'createQueueServiceWithSas(host, sasToken)'
    summary: >-
      Creates a new <xref:azure-storage.QueueService> object using the host Uri
      and the SAS credentials provided.
    fullName: 'azure-storage.createQueueServiceWithSas(host, sasToken)'
    type: Function
    syntax:
      parameters:
        - id: host
          type:
            - string
            - object
          description: |-
            The host address. To define primary only, pass a string. 
                                                                Otherwise 'host.primaryHost' defines the primary host and 'host.secondaryHost' defines the secondary host.
        - id: sasToken
          type:
            - string
          description: The Shared Access Signature token.
      return:
        type:
          - azure-storage.QueueService
        description: A new QueueService object with the SAS credentials.
      content: 'function createQueueServiceWithSas(host, sasToken)'
    langs:
      - js
  - uid: azure-storage._global.generateAccountSharedAccessSignature
    id: azure-storage._global.generateAccountSharedAccessSignature
    name: >-
      generateAccountSharedAccessSignature(storageAccountOrConnectionString,
      storageAccessKey, sharedAccessPolicy)
    summary: Generates an account shared access signature token
    fullName: >-
      azure-storage.generateAccountSharedAccessSignature(storageAccountOrConnectionString,
      storageAccessKey, sharedAccessPolicy)
    type: Function
    syntax:
      parameters:
        - id: storageAccountOrConnectionString
          type:
            - string
          description: The storage account or the connection string.
          optional: true
        - id: storageAccessKey
          type:
            - string
          description: The storage access key.
          optional: true
        - id: sharedAccessPolicy
          type:
            - object
          description: The shared access policy.
        - id: sharedAccessPolicy.AccessPolicy.Services
          type:
            - azure-storage.SharedAccessServices
          description: >-
            The services (blob, file, queue, table) for a shared access
            signature associated with this shared access policy.
                                                                                                  Refer to `Constants.AccountSasConstants.Services`.
        - id: sharedAccessPolicy.AccessPolicy.ResourceTypes
          type:
            - azure-storage.SharedAccessResourceTypes
          description: >-
            The resource type for a shared access signature associated with this
            shared access policy.
                                                                                                  Refer to `Constants.AccountSasConstants.ResourceTypes`.
        - id: sharedAccessPolicy.AccessPolicy.Permissions
          type:
            - azure-storage.SharedAccessPermissions
          description: |-
            The permissions for a shared access signature. 
                                                                                                  Refer to `Constants.AccountSasConstants.Permissions`.
        - id: sharedAccessPolicy.AccessPolicy.Start
          type:
            - date
          description: The time at which the Shared Access Signature becomes valid.
        - id: sharedAccessPolicy.AccessPolicy.Expiry
          type:
            - date
          description: The time at which the Shared Access Signature becomes expired.
        - id: sharedAccessPolicy.AccessPolicy.IPAddressOrRange
          type:
            - string
          description: >-
            The permission type. Refer to
            `Constants.AccountSasConstants.ResourceTypes`.
        - id: sharedAccessPolicy.AccessPolicy.Protocols
          type:
            - string
          description: >-
            The possible protocols. Refer to
            `Constants.AccountSasConstants.ResourceTypes`.
      content: >-
        function
        generateAccountSharedAccessSignature(storageAccountOrConnectionString,
        storageAccessKey, sharedAccessPolicy)
    langs:
      - js
