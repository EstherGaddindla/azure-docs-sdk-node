### YamlMime:UniversalReference
items:
  - uid: azure-storage.StorageServiceClient
    id: azure-storage.StorageServiceClient
    name: StorageServiceClient
    summary: >-
      The StorageServiceClient class is the base class of all the service
      classes.
    fullName: azure-storage.StorageServiceClient
    source:
      id: azure-storage.StorageServiceClient
      path: lib\common\services\storageserviceclient.js
      startLine: 73
      remote:
        branch: master
        path: lib\common\services\storageserviceclient.js
        repo: 'https://github.com/Azure/azure-storage-node.git'
    type: Class
    children:
      - 'azure-storage.StorageServiceClient.#ctor'
      - 'azure-storage.StorageServiceClient#logger'
      - azure-storage.StorageServiceClient._getDefaultXml2jsSettings
      - 'azure-storage.StorageServiceClient#setHost'
      - 'azure-storage.StorageServiceClient#performRequest'
      - 'azure-storage.StorageServiceClient#performRequestOutputStream'
      - 'azure-storage.StorageServiceClient#performRequestInputStream'
      - 'azure-storage.StorageServiceClient#_performRequest'
      - 'azure-storage.StorageServiceClient#_buildRequestOptions'
      - 'azure-storage.StorageServiceClient#_processResponse'
      - 'azure-storage.StorageServiceClient#withFilter'
      - azure-storage.StorageServiceClient._parseResponse
      - azure-storage.StorageServiceClient.getStorageSettings
      - 'azure-storage.StorageServiceClient#_setRequestUrl'
      - 'azure-storage.StorageServiceClient#_getPath'
      - 'azure-storage.StorageServiceClient#_getUrl'
      - 'azure-storage.StorageServiceClient#_initDefaultFilter'
      - 'azure-storage.StorageServiceClient#parseMetadataHeaders'
      - 'azure-storage.StorageServiceClient#getAccountServiceProperties'
      - 'azure-storage.StorageServiceClient#setAccountServiceProperties'
      - azure-storage.StorageServiceClient._normalizeError
      - 'azure-storage.StorageServiceClient#setProxy'
      - 'azure-storage.StorageServiceClient#_setDefaultProxy'
      - 'azure-storage.StorageServiceClient#_initializeLocation'
      - 'azure-storage.StorageServiceClient#_validateLocation'
      - 'azure-storage.StorageServiceClient#_invalidLocationMode'
      - 'azure-storage.StorageServiceClient#_maximumExecutionTimeExceeded'
      - 'azure-storage.StorageServiceClient#_setOperationExpiryTime'
    langs:
      - js
  - id: 'azure-storage.StorageServiceClient.#ctor'
    uid: 'azure-storage.StorageServiceClient.#ctor'
    parent: azure-storage.StorageServiceClient
    name: >-
      StorageServiceClient(storageAccount, storageAccessKey, host,
      usePathStyleUri, sasToken)
    fullName: >-
      azure-storage.StorageServiceClient.StorageServiceClient(storageAccount,
      storageAccessKey, host, usePathStyleUri, sasToken)
    summary: Creates a new StorageServiceClient object.
    type: Constructor
    syntax:
      parameters:
        - id: storageAccount
          type:
            - string
          description: The storage account.
        - id: storageAccessKey
          type:
            - string
          description: The storage access key.
        - id: host
          type:
            - object
          description: The host for the service.
        - id: usePathStyleUri
          type:
            - azure-storage.bool
          description: Boolean value indicating wether to use path style uris.
        - id: sasToken
          type:
            - string
          description: The Shared Access Signature token.
      content: >-
        new StorageServiceClient(storageAccount, storageAccessKey, host,
        usePathStyleUri, sasToken)
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#logger'
    id: 'azure-storage.StorageServiceClient#logger'
    parent: azure-storage.StorageServiceClient
    name: logger
    summary: >-
      The logger of the service. To change the log level of the services, set
      the `[logger.level](xref:azure-storage.Logger%23level)`.
    fullName: azure-storage.StorageServiceClient.logger
    type: Member
    syntax:
      return:
        type:
          - Logger
      content: logger
    langs:
      - js
  - uid: azure-storage.StorageServiceClient._getDefaultXml2jsSettings
    id: azure-storage.StorageServiceClient._getDefaultXml2jsSettings
    parent: azure-storage.StorageServiceClient
    name: _getDefaultXml2jsSettings()
    summary: Gets the default xml2js settings.
    fullName: azure-storage.StorageServiceClient._getDefaultXml2jsSettings()
    type: Function
    syntax:
      return:
        type:
          - object
        description: The default settings
      content: function _getDefaultXml2jsSettings()
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#setHost'
    id: 'azure-storage.StorageServiceClient#setHost'
    parent: azure-storage.StorageServiceClient
    name: setHost(host)
    summary: Sets a host for the service.
    fullName: azure-storage.StorageServiceClient.setHost(host)
    type: Function
    syntax:
      parameters:
        - id: host
          type:
            - string
          description: The host for the service.
      content: function setHost(host)
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#performRequest'
    id: 'azure-storage.StorageServiceClient#performRequest'
    parent: azure-storage.StorageServiceClient
    name: 'performRequest(webResource, outputData, options, callback)'
    summary: Performs a REST service request through HTTP expecting an input stream.
    fullName: >-
      azure-storage.StorageServiceClient.performRequest(webResource, outputData,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: webResource
          type:
            - azure-storage.WebResource
          description: The webresource on which to perform the request.
        - id: outputData
          type:
            - string
          description: The outgoing request data as a raw string.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-storage.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: callback
          type:
            - function
          description: The response callback function.
      content: 'function performRequest(webResource, outputData, options, callback)'
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#performRequestOutputStream'
    id: 'azure-storage.StorageServiceClient#performRequestOutputStream'
    parent: azure-storage.StorageServiceClient
    name: 'performRequestOutputStream(webResource, outputStream, options, callback)'
    summary: Performs a REST service request through HTTP expecting an input stream.
    fullName: >-
      azure-storage.StorageServiceClient.performRequestOutputStream(webResource,
      outputStream, options, callback)
    type: Function
    syntax:
      parameters:
        - id: webResource
          type:
            - azure-storage.WebResource
          description: The webresource on which to perform the request.
        - id: outputStream
          type:
            - azure-storage.Stream
          description: The outgoing request data as a stream.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-storage.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: callback
          type:
            - function
          description: The response callback function.
      content: >-
        function performRequestOutputStream(webResource, outputStream, options,
        callback)
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#performRequestInputStream'
    id: 'azure-storage.StorageServiceClient#performRequestInputStream'
    parent: azure-storage.StorageServiceClient
    name: >-
      performRequestInputStream(webResource, outputData, inputStream, options,
      callback)
    summary: Performs a REST service request through HTTP expecting an input stream.
    fullName: >-
      azure-storage.StorageServiceClient.performRequestInputStream(webResource,
      outputData, inputStream, options, callback)
    type: Function
    syntax:
      parameters:
        - id: webResource
          type:
            - azure-storage.WebResource
          description: The webresource on which to perform the request.
        - id: outputData
          type:
            - string
          description: The outgoing request data as a raw string.
        - id: inputStream
          type:
            - azure-storage.Stream
          description: The ingoing response data as a stream.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-storage.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: callback
          type:
            - function
          description: The response callback function.
      content: >-
        function performRequestInputStream(webResource, outputData, inputStream,
        options, callback)
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_performRequest'
    id: 'azure-storage.StorageServiceClient#_performRequest'
    parent: azure-storage.StorageServiceClient
    name: '_performRequest(webResource, body, options, callback)'
    summary: Performs a REST service request through HTTP.
    fullName: >-
      azure-storage.StorageServiceClient._performRequest(webResource, body,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: webResource
          type:
            - azure-storage.WebResource
          description: The webresource on which to perform the request.
        - id: body
          type:
            - object
          description: The request body.
        - id: body.outputData
          type:
            - string
          description: The outgoing request data as a raw string.
          optional: true
        - id: body.outputStream
          type:
            - azure-storage.Stream
          description: The outgoing request data as a stream.
          optional: true
        - id: body.inputStream
          type:
            - azure-storage.Stream
          description: The ingoing response data as a stream.
          optional: true
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.clientRequestId
          type:
            - string
          description: >-
            A string that represents the client request ID with a 1KB character
            limit.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-storage.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: callback
          type:
            - function
          description: The response callback function.
      content: 'function _performRequest(webResource, body, options, callback)'
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_buildRequestOptions'
    id: 'azure-storage.StorageServiceClient#_buildRequestOptions'
    parent: azure-storage.StorageServiceClient
    name: '_buildRequestOptions(webResource, options, callback)'
    summary: Builds the request options to be passed to the http.request method.
    fullName: >-
      azure-storage.StorageServiceClient._buildRequestOptions(webResource,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: webResource
          type:
            - azure-storage.WebResource
          description: The webresource where to build the options from.
        - id: options
          type:
            - object
          description: The request options.
        - id: callback
          type:
            - function
          description: The callback function.
      content: 'function _buildRequestOptions(webResource, options, callback)'
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_processResponse'
    id: 'azure-storage.StorageServiceClient#_processResponse'
    parent: azure-storage.StorageServiceClient
    name: '_processResponse(webResource, response, options)'
    summary: Process the response.
    fullName: >-
      azure-storage.StorageServiceClient._processResponse(webResource, response,
      options)
    type: Function
    syntax:
      parameters:
        - id: webResource
          type:
            - azure-storage.WebResource
          description: The web resource that made the request.
        - id: response
          type:
            - azure-storage.Response
          description: The response object.
        - id: options
          type:
            - azure-storage.Options
          description: The response parsing options.
        - id: options.payloadFormat
          type:
            - String
          description: The payload format.
      return:
        description: The normalized responseObject.
      content: 'function _processResponse(webResource, response, options)'
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#withFilter'
    id: 'azure-storage.StorageServiceClient#withFilter'
    parent: azure-storage.StorageServiceClient
    name: withFilter(filter)
    summary: >-
      Associate a filtering operation with this StorageServiceClient. Filtering
      operations

      can include logging, automatically retrying, etc. Filter operations are
      objects

      that implement a method with the signature:

          "function handle (requestOptions, next)".

      After doing its preprocessing on the request options, the method needs to
      call

      "next" passing a callback with the following signature:

      signature:

          "function (returnObject, finalCallback, next)"

      In this callback, and after processing the returnObject (the response from
      the

      request to the server), the callback needs to either invoke next if it
      exists to

      continue processing other filters or simply invoke finalCallback otherwise
      to end

      up the service invocation.
    fullName: azure-storage.StorageServiceClient.withFilter(filter)
    type: Function
    syntax:
      parameters:
        - id: filter
          type:
            - Object
          description: The new filter object.
      return:
        type:
          - azure-storage.StorageServiceClient
        description: A new service client with the filter applied.
      content: function withFilter(filter)
    langs:
      - js
  - uid: azure-storage.StorageServiceClient._parseResponse
    id: azure-storage.StorageServiceClient._parseResponse
    parent: azure-storage.StorageServiceClient
    name: '_parseResponse(response, xml2jsSettings, options)'
    summary: |-
      Parses a server response body from XML or JSON into a JS object.
      This is done using the xml2js library.
    fullName: >-
      azure-storage.StorageServiceClient._parseResponse(response,
      xml2jsSettings, options)
    type: Function
    syntax:
      parameters:
        - id: response
          type:
            - object
          description: >-
            The response object with a property "body" with a XML or JSON string
            content.
        - id: xml2jsSettings
          type:
            - object
          description: The XML to json settings.
        - id: options
          type:
            - azure-storage.Options
          description: The response parsing options.
        - id: options.payloadFormat
          type:
            - String
          description: The payload format.
      return:
        type:
          - object
        description: >-
          The same response object with the body part as a JS object instead of
          a XML or JSON string.
      content: 'function _parseResponse(response, xml2jsSettings, options)'
    langs:
      - js
  - uid: azure-storage.StorageServiceClient.getStorageSettings
    id: azure-storage.StorageServiceClient.getStorageSettings
    parent: azure-storage.StorageServiceClient
    name: >-
      getStorageSettings(storageAccountOrConnectionString, storageAccessKey,
      host, sasToken)
    summary: Gets the storage settings.
    fullName: >-
      azure-storage.StorageServiceClient.getStorageSettings(storageAccountOrConnectionString,
      storageAccessKey, host, sasToken)
    type: Function
    syntax:
      parameters:
        - id: storageAccountOrConnectionString
          type:
            - string
          description: The storage account or the connection string.
          optional: true
        - id: storageAccessKey
          type:
            - string
          description: The storage access key.
          optional: true
        - id: host
          type:
            - string
          description: The host address.
          optional: true
        - id: sasToken
          type:
            - object
          description: The sas token.
          optional: true
      return:
        type:
          - azure-storage.StorageServiceSettings
        description: ''
      content: >-
        function getStorageSettings(storageAccountOrConnectionString,
        storageAccessKey, host, sasToken)
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_setRequestUrl'
    id: 'azure-storage.StorageServiceClient#_setRequestUrl'
    parent: azure-storage.StorageServiceClient
    name: _setRequestUrl(webResource)
    summary: Sets the webResource's requestUrl based on the service client settings.
    fullName: azure-storage.StorageServiceClient._setRequestUrl(webResource)
    type: Function
    syntax:
      parameters:
        - id: webResource
          type:
            - azure-storage.WebResource
          description: The web resource where to set the request url.
      content: function _setRequestUrl(webResource)
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_getPath'
    id: 'azure-storage.StorageServiceClient#_getPath'
    parent: azure-storage.StorageServiceClient
    name: _getPath(path)
    summary: |-
      Retrieves the normalized path to be used in a request.
      It also removes any leading "/" of the path in case
      it's there before.
    fullName: azure-storage.StorageServiceClient._getPath(path)
    type: Function
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: The path to be normalized.
      return:
        type:
          - string
        description: The normalized path.
      content: function _getPath(path)
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_getUrl'
    id: 'azure-storage.StorageServiceClient#_getUrl'
    parent: azure-storage.StorageServiceClient
    name: _getUrl()
    summary: Get the url of a given path
    fullName: azure-storage.StorageServiceClient._getUrl()
    type: Function
    syntax:
      content: function _getUrl()
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_initDefaultFilter'
    id: 'azure-storage.StorageServiceClient#_initDefaultFilter'
    parent: azure-storage.StorageServiceClient
    name: _initDefaultFilter()
    summary: >-
      Initializes the default filter.

      This filter is responsible for chaining the pre filters request into the
      operation and, after processing the response,

      pass it to the post processing filters. This method should only be invoked
      by the StorageServiceClient constructor.
    fullName: azure-storage.StorageServiceClient._initDefaultFilter()
    type: Function
    syntax:
      content: function _initDefaultFilter()
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#parseMetadataHeaders'
    id: 'azure-storage.StorageServiceClient#parseMetadataHeaders'
    parent: azure-storage.StorageServiceClient
    name: parseMetadataHeaders(headers)
    summary: Retrieves the metadata headers from the response headers.
    fullName: azure-storage.StorageServiceClient.parseMetadataHeaders(headers)
    type: Function
    syntax:
      parameters:
        - id: headers
          type:
            - object
          description: The metadata headers.
      return:
        type:
          - object
        description: An object with the metadata headers (without the "x-ms-" prefix).
      content: function parseMetadataHeaders(headers)
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#getAccountServiceProperties'
    id: 'azure-storage.StorageServiceClient#getAccountServiceProperties'
    parent: azure-storage.StorageServiceClient
    name: 'getAccountServiceProperties(options, callback)'
    summary: >-
      Gets the properties of a storage account’s service, including Azure
      Storage Analytics.
    fullName: >-
      azure-storage.StorageServiceClient.getAccountServiceProperties(options,
      callback)
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-storage.LocationMode
          description: >-
            Specifies the location mode used to decide which location the
            request should be sent to. 
                                                                          Please see StorageUtilities.LocationMode for the possible values.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-storage.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-storage.int
          description: >-
            The maximum execution time, in milliseconds, across all potential
            retries, to use when making this request.
                                                                          The maximum execution time interval begins at the time that the client begins building the request. The maximum
                                                                          execution time is checked intermittently while performing requests, and before executing retries.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-storage.bool
          description: >-
            Determines whether the Nagle algorithm is used; true to use the
            Nagle algorithm; otherwise, false.
                                                                          The default value is false.
          optional: true
        - id: callback
          type:
            - azure-storage.errorOrResult
          description: >-
            `error` will contain information if an error occurs; otherwise,
            `result` will contain the properties 
                                                                          and `response` will contain information related to this operation.
      content: 'function getAccountServiceProperties(options, callback)'
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#setAccountServiceProperties'
    id: 'azure-storage.StorageServiceClient#setAccountServiceProperties'
    parent: azure-storage.StorageServiceClient
    name: 'setAccountServiceProperties(serviceProperties, options, callback)'
    summary: >-
      Sets the properties of a storage account’s service, including Azure
      Storage Analytics.

      You can also use this operation to set the default request version for all
      incoming requests that do not have a version specified.
    fullName: >-
      azure-storage.StorageServiceClient.setAccountServiceProperties(serviceProperties,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: serviceProperties
          type:
            - object
          description: The service properties.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.locationMode
          type:
            - azure-storage.LocationMode
          description: >-
            Specifies the location mode used to decide which location the
            request should be sent to. 
                                                                                 Please see StorageUtilities.LocationMode for the possible values.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-storage.int
          description: >-
            The server timeout interval, in milliseconds, to use for the
            request.
          optional: true
        - id: options.clientRequestTimeoutInMs
          type:
            - azure-storage.int
          description: >-
            The timeout of client requests, in milliseconds, to use for the
            request.
          optional: true
        - id: options.maximumExecutionTimeInMs
          type:
            - azure-storage.int
          description: >-
            The maximum execution time, in milliseconds, across all potential
            retries, to use when making this request.
                                                                                 The maximum execution time interval begins at the time that the client begins building the request. The maximum
                                                                                 execution time is checked intermittently while performing requests, and before executing retries.
          optional: true
        - id: options.useNagleAlgorithm
          type:
            - azure-storage.bool
          description: >-
            Determines whether the Nagle algorithm is used; true to use the
            Nagle algorithm; otherwise, false.
                                                                                 The default value is false.
          optional: true
        - id: callback
          type:
            - azure-storage.errorOrResponse
          description: |-
            `error` will contain information
                                                                                 if an error occurs; otherwise, `response`
                                                                                 will contain information related to this operation.
      content: >-
        function setAccountServiceProperties(serviceProperties, options,
        callback)
    langs:
      - js
  - uid: azure-storage.StorageServiceClient._normalizeError
    id: azure-storage.StorageServiceClient._normalizeError
    parent: azure-storage.StorageServiceClient
    name: _normalizeError(error)
    summary: >-
      Processes the error body into a normalized error object with all the
      properties lowercased.


      Error information may be returned by a service call with additional
      debugging information:

      http://msdn.microsoft.com/en-us/library/windowsazure/dd179382.aspx


      Table services returns these properties lowercased, example, "code"
      instead of "Code". So that the user

      can always expect the same format, this method lower cases everything.
    fullName: azure-storage.StorageServiceClient._normalizeError(error)
    type: Function
    syntax:
      parameters:
        - id: error
          type:
            - Object
          description: >-
            The error object as returned by the service and parsed to JSON by
            the xml2json.
      return:
        type:
          - Object
        description: The normalized error object with all properties lower cased.
      content: function _normalizeError(error)
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#setProxy'
    id: 'azure-storage.StorageServiceClient#setProxy'
    parent: azure-storage.StorageServiceClient
    name: setProxy(proxy)
    summary: Sets proxy object specified by caller.
    fullName: azure-storage.StorageServiceClient.setProxy(proxy)
    type: Function
    syntax:
      parameters:
        - id: proxy
          type:
            - object
          description: |-
            proxy to use for tunneling
                                          {
                                           host: hostname
                                           port: port number
                                           proxyAuth: 'user:password' for basic auth
                                           headers: {...} headers for proxy server
                                           key: key for proxy server
                                           ca: ca for proxy server
                                           cert: cert for proxy server
                                          }
                                          if null or undefined, clears proxy
      content: function setProxy(proxy)
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_setDefaultProxy'
    id: 'azure-storage.StorageServiceClient#_setDefaultProxy'
    parent: azure-storage.StorageServiceClient
    name: _setDefaultProxy()
    summary: |-
      Sets the service host default proxy from the environment.
      Can be overridden by calling _setProxyUrl or _setProxy
    fullName: azure-storage.StorageServiceClient._setDefaultProxy()
    type: Function
    syntax:
      content: function _setDefaultProxy()
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_initializeLocation'
    id: 'azure-storage.StorageServiceClient#_initializeLocation'
    parent: azure-storage.StorageServiceClient
    name: _initializeLocation()
    summary: Initializes the location to which the operation is being sent to.
    fullName: azure-storage.StorageServiceClient._initializeLocation()
    type: Function
    syntax:
      content: function _initializeLocation()
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_validateLocation'
    id: 'azure-storage.StorageServiceClient#_validateLocation'
    parent: azure-storage.StorageServiceClient
    name: _validateLocation()
    summary: Validates the location to which the operation is being sent to.
    fullName: azure-storage.StorageServiceClient._validateLocation()
    type: Function
    syntax:
      content: function _validateLocation()
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_invalidLocationMode'
    id: 'azure-storage.StorageServiceClient#_invalidLocationMode'
    parent: azure-storage.StorageServiceClient
    name: _invalidLocationMode()
    summary: >-
      Checks whether we have the relevant host information based on the
      locationMode.
    fullName: azure-storage.StorageServiceClient._invalidLocationMode()
    type: Function
    syntax:
      content: function _invalidLocationMode()
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_maximumExecutionTimeExceeded'
    id: 'azure-storage.StorageServiceClient#_maximumExecutionTimeExceeded'
    parent: azure-storage.StorageServiceClient
    name: _maximumExecutionTimeExceeded()
    summary: Checks to see if the maximum execution timeout provided has been exceeded.
    fullName: azure-storage.StorageServiceClient._maximumExecutionTimeExceeded()
    type: Function
    syntax:
      content: function _maximumExecutionTimeExceeded()
    langs:
      - js
  - uid: 'azure-storage.StorageServiceClient#_setOperationExpiryTime'
    id: 'azure-storage.StorageServiceClient#_setOperationExpiryTime'
    parent: azure-storage.StorageServiceClient
    name: _setOperationExpiryTime()
    summary: Sets the operation expiry time.
    fullName: azure-storage.StorageServiceClient._setOperationExpiryTime()
    type: Function
    syntax:
      content: function _setOperationExpiryTime()
    langs:
      - js
references:
  - uid: azure-storage.WebResource
    name: WebResource
    fullName: azure-storage.WebResource
    isExternal: false
